{"version":3,"sources":["StuComponents/StuSignup.jsx","firebase.js","ShowPassword.jsx"],"names":["db","firebase","firestore","StuSignup","useState","code","setCode","email","setEmail","name","setName","rno","setRno","pass","setPass","createUser","classList","auth","createUserWithEmailAndPassword","then","user","updateProfile","displayName","checkDetails","catch","err","remove","M","toast","html","message","classes","collection","doc","get","exists","ref","details","rollNo","list","i","length","checkRollNo","data","studentsList","currentUser","delete","createDoc","addToCRList","error","obj","classCode","verified","set","docRef","update","FieldValue","arrayUnion","window","location","pathname","className","onSubmit","e","preventDefault","target","add","style","width","htmlFor","placeholder","id","type","value","onChange","required","to","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","ShowPassword","onClick","password","document","getElementById","getAttribute","setAttribute","toggle"],"mappings":"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","file":"static/js/23.f9df9e77.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport M from \"materialize-css\";\r\nimport firebase from \"../firebase\";\r\nimport ShowPassword from \"../ShowPassword\";\r\nimport { auth } from \"firebase\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst StuSignup = () => {\r\n  const [code, setCode] = useState(\"\"),\r\n    [email, setEmail] = useState(\"\"),\r\n    [name, setName] = useState(\"\"),\r\n    [rno, setRno] = useState(null),\r\n    [pass, setPass] = useState(\"\");\r\n  // [list, setList] = useState([]),\r\n  // [duplicate, setDup] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   if (code) {\r\n  //     const checkRef = db.collection(\"classes\").doc(code);\r\n  //     checkRef.get().then((doc) => {\r\n  //       if (doc.exists) {\r\n  //         getCurrentList();\r\n  //       }\r\n  //     });\r\n  //   }\r\n  //   // eslint-disable-next-line\r\n  // }, [code]);\r\n\r\n  // const getCurrentList = () => {\r\n  //   const docRef = db\r\n  //     .collection(\"classes\")\r\n  //     .doc(code)\r\n  //     .collection(\"details\")\r\n  //     .doc(\"stuList\");\r\n  //   docRef.onSnapshot((doc) => {\r\n  //     if (doc.data) setList([...doc.data().studentsList]);\r\n  //   });\r\n  // };\r\n\r\n  const rollNoChange = (e) => {\r\n    setRno(e.target.value);\r\n    // checkRollNo(e.target.value);\r\n  };\r\n\r\n  const checkRollNo = (rollNo, list) => {\r\n    // setDup(false);\r\n    let i;\r\n    for (i = 0; i < list.length; i++) {\r\n      if (list[i].rollNo === rollNo) {\r\n        // setDup(true);\r\n        return true;\r\n      }\r\n    }\r\n    if (i === list.length) {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // // // SUBMIT // // //\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const classList = e.target.classList;\r\n    classList.add(\"loading\");\r\n    createUser(classList);\r\n  };\r\n\r\n  // Step-1 Authenticate User\r\n  const createUser = (classList) => {\r\n    auth()\r\n      .createUserWithEmailAndPassword(email, pass)\r\n      .then((user) => {\r\n        user.user\r\n          .updateProfile({\r\n            displayName: \"student\",\r\n          })\r\n          .then(() => {\r\n            checkDetails(classList);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        classList.remove(\"loading\");\r\n        M.toast({ html: err.message, classes: \"toast error-toast\" });\r\n      });\r\n  };\r\n\r\n  // Step-2 Check Details(Class-code)\r\n  const checkDetails = (classList) => {\r\n    const docCheck = db.collection(\"classes\").doc(code);\r\n    docCheck\r\n      .get()\r\n      .then((doc) => {\r\n        if (doc.exists) {\r\n          doc.ref\r\n            .collection(\"details\")\r\n            .doc(\"stuList\")\r\n            .get()\r\n            .then((details) => {\r\n              if (checkRollNo(rno, details.data().studentsList)) {\r\n                auth().currentUser.delete();\r\n                classList.remove(\"loading\");\r\n                M.toast({\r\n                  html: `Roll No- ${rno} already exists`,\r\n                  classes: \"toast error-toast\",\r\n                });\r\n                return;\r\n              }\r\n              createDoc();\r\n              addToCRList();\r\n              classList.remove(\"loading\");\r\n              M.toast({\r\n                html: \"Registered Successfully\",\r\n                classes: \"toast success-toast\",\r\n              });\r\n            });\r\n        } else {\r\n          auth().currentUser.delete();\r\n          classList.remove(\"loading\");\r\n          M.toast({\r\n            html: \"Wrong class code was entered, please recheck the entry!\",\r\n            classes: \"toast error-toast\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        auth().currentUser.delete();\r\n        classList.remove(\"loading\");\r\n        M.toast({ html: error.message, classes: \"toast error-toast\" });\r\n      });\r\n  };\r\n\r\n  // Step-3 Create Student document\r\n\r\n  // Document to be added\r\n  const obj = {\r\n    classCode: code,\r\n    email,\r\n    name,\r\n    rollNo: rno,\r\n    verified: false,\r\n  };\r\n  //\r\n  const createDoc = () => {\r\n    const docRef = db.collection(\"students\").doc(email);\r\n    docRef.set(obj).catch((err) => {\r\n      auth().currentUser.delete();\r\n      M.toast({ html: err.message, classes: \"toast error-toast\" });\r\n    });\r\n  };\r\n\r\n  // Step-4 Add student data to class document\r\n  const addToCRList = () => {\r\n    const docRef = db\r\n      .collection(\"classes\")\r\n      .doc(code)\r\n      .collection(\"details\")\r\n      .doc(\"stuList\");\r\n    const user = {\r\n      rollNo: obj.rollNo,\r\n      name: obj.name,\r\n      email: obj.email,\r\n    };\r\n    if (auth().currentUser?.displayName === \"student\") {\r\n      docRef\r\n        .update({\r\n          studentsList: firebase.firestore.FieldValue.arrayUnion(user),\r\n        })\r\n        .then(() => {\r\n          window.location.pathname = \"/student\";\r\n        })\r\n        .catch((err) => {\r\n          auth().currentUser.delete();\r\n          M.toast({ html: err.message, classes: \"toast error-toast\" });\r\n        });\r\n    }\r\n  };\r\n  // // // // // // // // // // // //\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <div className=\"container-login mx-auto\">\r\n        <div className=\"con-login\">\r\n          <h1>Join Your Classmates</h1>\r\n          <form onSubmit={handleSubmit} style={{ width: \"100%\" }}>\r\n            <div className=\"con-inputs mt-4\">\r\n              <div className=\"con-input\">\r\n                <label htmlFor=\"code\">Class Code</label>\r\n                <input\r\n                  placeholder=\"Code provided by CR\"\r\n                  id=\"code\"\r\n                  type=\"text\"\r\n                  value={code}\r\n                  onChange={(e) => setCode(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"con-input\">\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Name\"\r\n                  id=\"name\"\r\n                  required\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"con-input\">\r\n                <label htmlFor=\"rollno\">Roll Number</label>\r\n                <input\r\n                  placeholder=\"Roll Number\"\r\n                  id=\"rollno\"\r\n                  type=\"text\"\r\n                  required\r\n                  // onChange={(e) => setRno(e.target.value)}\r\n                  onChange={rollNoChange}\r\n                />\r\n              </div>\r\n              <div className=\"con-input\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  placeholder=\"Email\"\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  required\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"con-input\">\r\n                <label htmlFor=\"password\">Password:</label>\r\n                <input\r\n                  placeholder=\"Password\"\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  value={pass}\r\n                  onChange={(e) => setPass(e.target.value)}\r\n                  required\r\n                />\r\n                <ShowPassword />\r\n              </div>\r\n              <div className=\"con-new\">\r\n                Already Joined? <Link to=\"/student/login\">Log In</Link>\r\n              </div>\r\n              <footer>\r\n                <button type=\"submit\" className=\"btn-login\">\r\n                  Log In\r\n                </button>\r\n              </footer>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StuSignup;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n    //   paste your keys here!!!\r\n    apiKey: \"AIzaSyA3rB17zIGSknkGj-9gcvVJ3DBuJjI7rrk\",\r\n    authDomain: \"laayakweb.firebaseapp.com\",\r\n    projectId: \"laayakweb\",\r\n    storageBucket: \"laayakweb.appspot.com\",\r\n    messagingSenderId: \"738695535451\",\r\n    appId: \"1:738695535451:web:1e153c62de16dc03ee587e\",\r\n    measurementId: \"G-4QDML5T1CD\"\r\n    //   apiKey: \"\",\r\n    //   authDomain: \"\",\r\n    //   databaseURL: \"\",\r\n    //   projectId: \"\",\r\n    //   storageBucket: \"\",\r\n    //   messagingSenderId: \"\",\r\n    //   appId: \"\",\r\n    //   measurementId: \"\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;\r\n","import React from 'react';\r\n\r\nconst ShowPassword = () => {\r\n    const showToggle = (e) => {\r\n        const password = document.getElementById(\"password\");\r\n        const type = password.getAttribute('type') === 'password' ? 'text' : 'password';\r\n        password.setAttribute('type', type);\r\n        e.target.classList.toggle('fa-eye-slash');\r\n    }\r\n    return (\r\n        <i className=\"fa fa-eye\" onClick={showToggle} />\r\n    );\r\n}\r\n\r\nexport default ShowPassword;\r\n"],"sourceRoot":""}