{"version":3,"sources":["StuComponents/StuLogin.jsx","firebase.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","ShowPassword.jsx"],"names":["StuLogin","db","firebase","firestore","isMount","state","email","password","handleSubmit","e","preventDefault","classList","target","add","auth","signInWithEmailAndPassword","then","user","displayName","remove","M","toast","html","classes","window","location","pathname","catch","err","message","handleChange","name","value","setState","this","className","onSubmit","style","width","htmlFor","placeholder","id","type","required","onChange","to","Component","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ShowPassword","onClick","document","getElementById","getAttribute","setAttribute","toggle"],"mappings":"gOAMMA,E,4MACJC,GAAKC,IAASC,Y,EACdC,SAAU,E,EACVC,MAAQ,CACNC,MAAO,GACPC,SAAU,I,EAWZC,aAAe,SAACC,GACdA,EAAEC,iBACF,IAAMC,EAAYF,EAAEG,OAAOD,UAC3BA,EAAUE,IAAI,WACdX,IACGY,OACAC,2BAA2B,EAAKV,MAAMC,MAAO,EAAKD,MAAME,UACxDS,MAAK,SAACC,GAEuB,YAA1BA,EAAKA,KAAKC,aACgB,OAA1BD,EAAKA,KAAKC,aAEVP,EAAUQ,OAAO,WACjBC,IAAEC,MAAM,CACNC,KAAM,yBACNC,QAAS,wBAEXC,OAAOC,SAASC,SAAW,aAE3Bf,EAAUQ,OAAO,WACjBC,IAAEC,MAAM,CACNC,KAAM,yBACNC,QAAS,0BAIdI,OAAM,SAACC,GAGF,kEADFA,EAAIC,SAGF,8FADFD,EAAIC,SAGJlB,EAAUQ,OAAO,WACjBC,IAAEC,MAAM,CACNC,KAAM,yBACNC,QAAS,wBAGXZ,EAAUQ,OAAO,WACjBC,IAAEC,MAAM,CAAEC,KAAMM,EAAIC,QAASN,QAAS,2B,EAK9CO,aAAe,SAACrB,GACd,IAAMsB,EAAOtB,EAAEG,OAAOmB,KACpBC,EAAQvB,EAAEG,OAAOoB,MACf,EAAK5B,SACP,EAAK6B,SAAL,eACGF,EAAOC,K,kEAzDZE,KAAK9B,SAAU,I,kDAIf8B,KAAK9B,SAAU,I,+BA2Df,OACE,yBAAK+B,UAAU,kBACb,yBAAKA,UAAU,2BACb,yBAAKA,UAAU,aACb,qCACA,0BAAMC,SAAUF,KAAK1B,aAAc6B,MAAO,CAAEC,MAAO,SACjD,yBAAKH,UAAU,mBACb,yBAAKA,UAAU,aACb,2BAAOI,QAAQ,SAAf,SACA,2BACEC,YAAY,QACZC,GAAG,QACHC,KAAK,QACLV,MAAOE,KAAK7B,MAAMC,MAClByB,KAAK,QACLY,UAAQ,EACRC,SAAUV,KAAKJ,gBAGnB,yBAAKK,UAAU,aACb,2BAAOI,QAAQ,YAAf,aACA,2BACEC,YAAY,WACZC,GAAG,WACHC,KAAK,WACLX,KAAK,WACLC,MAAOE,KAAK7B,MAAME,SAClBqC,SAAUV,KAAKJ,aACfa,UAAQ,IAEV,kBAAC,IAAD,OAEF,yBAAKR,UAAU,WAAf,aACY,kBAAC,IAAD,CAAMU,GAAG,mBAAT,YAEZ,gCACE,4BAAQH,KAAK,SAASP,UAAU,aAAhC,oB,GA5GKW,aAyHR9C,a,gCC/Hf,uCAwBAE,IAAS6C,cAnBc,CAEnBC,OAAQ,0CACRC,WAAY,4BACZC,UAAW,YACXC,cAAe,wBACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAYJpD,MAAf,G,gCCzBe,SAASqD,EAAgBC,EAAKC,EAAKzB,GAYhD,OAXIyB,KAAOD,EACTE,OAAOC,eAAeH,EAAKC,EAAK,CAC9BzB,MAAOA,EACP4B,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZN,EAAIC,GAAOzB,EAGNwB,EAZT,mC,gCCAA,oBAceO,IAZM,WAOjB,OACI,uBAAG5B,UAAU,YAAY6B,QAPV,SAACvD,GAChB,IAAMF,EAAW0D,SAASC,eAAe,YACnCxB,EAAyC,aAAlCnC,EAAS4D,aAAa,QAAyB,OAAS,WACrE5D,EAAS6D,aAAa,OAAQ1B,GAC9BjC,EAAEG,OAAOD,UAAU0D,OAAO","file":"static/js/18.96909f49.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport M from \"materialize-css\";\r\nimport firebase from \"../firebase\";\r\nimport ShowPassword from \"../ShowPassword\";\r\n\r\nclass StuLogin extends Component {\r\n  db = firebase.firestore();\r\n  isMount = false;\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.isMount = true;\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    this.isMount = false;\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const classList = e.target.classList;\r\n    classList.add(\"loading\");\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then((user) => {\r\n        if (\r\n          user.user.displayName === \"student\" ||\r\n          user.user.displayName === \"cr\"\r\n        ) {\r\n          classList.remove(\"loading\");\r\n          M.toast({\r\n            html: \"Logged In Successfully\",\r\n            classes: \"toast success-toast\",\r\n          });\r\n          window.location.pathname = \"/student\";\r\n        } else {\r\n          classList.remove(\"loading\");\r\n          M.toast({\r\n            html: \"Invalid Email/Password\",\r\n            classes: \"toast error-toast\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (\r\n          err.message ===\r\n            \"The password is invalid or the user does not have a password.\" ||\r\n          err.message ===\r\n            \"There is no user record corresponding to this identifier. The user may have been deleted.\"\r\n        ) {\r\n          classList.remove(\"loading\");\r\n          M.toast({\r\n            html: \"Invalid Email/Password\",\r\n            classes: \"toast error-toast\",\r\n          });\r\n        } else {\r\n          classList.remove(\"loading\");\r\n          M.toast({ html: err.message, classes: \"toast error-toast\" });\r\n        }\r\n      });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const name = e.target.name,\r\n      value = e.target.value;\r\n    if (this.isMount) {\r\n      this.setState({\r\n        [name]: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-container\">\r\n        <div className=\"container-login mx-auto\">\r\n          <div className=\"con-login\">\r\n            <h1>Login</h1>\r\n            <form onSubmit={this.handleSubmit} style={{ width: \"100%\" }}>\r\n              <div className=\"con-inputs mt-4\">\r\n                <div className=\"con-input\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    placeholder=\"Email\"\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    value={this.state.email}\r\n                    name=\"email\"\r\n                    required\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n                <div className=\"con-input\">\r\n                  <label htmlFor=\"password\">Password:</label>\r\n                  <input\r\n                    placeholder=\"Password\"\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.handleChange}\r\n                    required\r\n                  />\r\n                  <ShowPassword />\r\n                </div>\r\n                <div className=\"con-new\">\r\n                  New here? <Link to=\"/student/signup\">Sign Up</Link>\r\n                </div>\r\n                <footer>\r\n                  <button type=\"submit\" className=\"btn-login\">\r\n                    Log In\r\n                  </button>\r\n                </footer>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StuLogin;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n    //   paste your keys here!!!\r\n    apiKey: \"AIzaSyA3rB17zIGSknkGj-9gcvVJ3DBuJjI7rrk\",\r\n    authDomain: \"laayakweb.firebaseapp.com\",\r\n    projectId: \"laayakweb\",\r\n    storageBucket: \"laayakweb.appspot.com\",\r\n    messagingSenderId: \"738695535451\",\r\n    appId: \"1:738695535451:web:1e153c62de16dc03ee587e\",\r\n    measurementId: \"G-4QDML5T1CD\"\r\n    //   apiKey: \"\",\r\n    //   authDomain: \"\",\r\n    //   databaseURL: \"\",\r\n    //   projectId: \"\",\r\n    //   storageBucket: \"\",\r\n    //   messagingSenderId: \"\",\r\n    //   appId: \"\",\r\n    //   measurementId: \"\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React from 'react';\r\n\r\nconst ShowPassword = () => {\r\n    const showToggle = (e) => {\r\n        const password = document.getElementById(\"password\");\r\n        const type = password.getAttribute('type') === 'password' ? 'text' : 'password';\r\n        password.setAttribute('type', type);\r\n        e.target.classList.toggle('fa-eye-slash');\r\n    }\r\n    return (\r\n        <i className=\"fa fa-eye\" onClick={showToggle} />\r\n    );\r\n}\r\n\r\nexport default ShowPassword;\r\n"],"sourceRoot":""}